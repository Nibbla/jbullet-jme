#summary How collision shapes work in jbullet-jme

A CollisionShape defines the physics shape of a PhysicsNode

== From scratch ==
You can create a CollisionShape object and use that when constructing a PhysicsNode, this way it is possible to reuse that CollisionShape

== From BoundingVolume ==
In jbullet-jme, CollisionShapes can be drived from the jme BoundingVolume of a Spatial.
When you create a PhysicsNode with a spatial and shape type, the corresponding BoundingVolume is created on the PhysicsNode and a CollisionShape is automatically derived from that.
If you want the shape to be different than the auto-generated one, you can set a BoundingVolume to the PhysicsNode and call createCollisionShape() to recreate the corresponding CollisionShape.

to be extended..

== CompoundCollisionShape ==
A CompoundCollisionShape combines multiple other collision shapes to define more detailed collision shapes. See also [CenterOfMass]

==Notes==
Currently, PhysicsNodes with mesh collision shape do not collide with other mesh PhysicsNodes, so mesh shapes are mostly to be used for static objects (floor/world) while box/sphere etc. shapes should be used for mobile objects.

== JavaDoc ==
http://jbullet-jme.googlecode.com/svn/trunk/jbullet-jme/javadoc/com/jmex/jbullet/collision/shapes/CollisionShape.html